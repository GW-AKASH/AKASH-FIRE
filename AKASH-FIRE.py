# 
# https://www.github.com/htr-tech
# Time : Thu Nov 23 14:31:44 2023
# -------------------------------
_ = lambda __ : __import__('marshal').loads(__import__('base64').b64decode(__[::-1]));exec((_)(b'='))
